<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.1 on darwin)" generated="20200522 00:11:22.491" rpa="false">
<suite id="s1" name="01 Router" source="/Users/warrick.mitchell/Documents/Projects/robotframework-napalm/tests/01_router.robot">
<test id="s1-t1" name="T01.1 Ping VL-PE1 Router Management Interface">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 00:11:23.353" level="INFO">[host 192.168.1.55 session-id 11542] initialized: session-id=11542 | server_capabilities=&lt;dict_keyiterator object at 0x110858a90&gt;</msg>
<msg timestamp="20200522 00:11:23.354" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x110823cd0&gt;</msg>
<status status="PASS" starttime="20200522 00:11:23.048" endtime="20200522 00:11:23.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 00:11:23.354" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x110823cd0&gt;</msg>
<status status="PASS" starttime="20200522 00:11:23.354" endtime="20200522 00:11:23.354"></status>
</kw>
<status status="PASS" starttime="20200522 00:11:23.048" endtime="20200522 00:11:23.354"></status>
</kw>
<kw name="Ping Neighbor" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>192.168.1.55</arg>
</arguments>
<assign>
<var>${peer_ping_state}</var>
</assign>
<msg timestamp="20200522 00:11:23.355" level="INFO">[host 192.168.1.55 session-id 11542] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:11:27.491" level="INFO">${peer_ping_state} = Successful</msg>
<status status="PASS" starttime="20200522 00:11:23.354" endtime="20200522 00:11:27.491"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Successful</arg>
<arg>${peer_ping_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 00:11:27.491" endtime="20200522 00:11:27.491"></status>
</kw>
<tags>
<tag>PING</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 00:11:23.047" endtime="20200522 00:11:27.492" critical="yes"></status>
</test>
<test id="s1-t2" name="T01.2 Ping VL-PE2 Loopback Interface">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 00:11:27.783" level="INFO">[host 192.168.1.55 session-id 11548] initialized: session-id=11548 | server_capabilities=&lt;dict_keyiterator object at 0x1108dcae0&gt;</msg>
<msg timestamp="20200522 00:11:27.783" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x1108d0dc0&gt;</msg>
<status status="PASS" starttime="20200522 00:11:27.493" endtime="20200522 00:11:27.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 00:11:27.784" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x1108d0dc0&gt;</msg>
<status status="PASS" starttime="20200522 00:11:27.784" endtime="20200522 00:11:27.784"></status>
</kw>
<status status="PASS" starttime="20200522 00:11:27.493" endtime="20200522 00:11:27.784"></status>
</kw>
<kw name="Ping Neighbor" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_ping_state}</var>
</assign>
<msg timestamp="20200522 00:11:27.785" level="INFO">[host 192.168.1.55 session-id 11548] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:11:31.928" level="INFO">${peer_ping_state} = Successful</msg>
<status status="PASS" starttime="20200522 00:11:27.785" endtime="20200522 00:11:31.928"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Successful</arg>
<arg>${peer_ping_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 00:11:31.928" endtime="20200522 00:11:31.928"></status>
</kw>
<tags>
<tag>Ping</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 00:11:27.492" endtime="20200522 00:11:31.929" critical="yes"></status>
</test>
<test id="s1-t3" name="T01.3 Check OSPF comes back after flap">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 00:11:32.272" level="INFO">[host 192.168.1.55 session-id 11554] initialized: session-id=11554 | server_capabilities=&lt;dict_keyiterator object at 0x1108ec540&gt;</msg>
<msg timestamp="20200522 00:11:32.272" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x1108eb2b0&gt;</msg>
<status status="PASS" starttime="20200522 00:11:31.930" endtime="20200522 00:11:32.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 00:11:32.272" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x1108eb2b0&gt;</msg>
<status status="PASS" starttime="20200522 00:11:32.272" endtime="20200522 00:11:32.272"></status>
</kw>
<status status="PASS" starttime="20200522 00:11:31.930" endtime="20200522 00:11:32.273"></status>
</kw>
<kw name="Get OSPF Neighbor State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 00:11:32.273" level="INFO">[host 192.168.1.55 session-id 11554] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:11:32.561" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 00:11:32.273" endtime="20200522 00:11:32.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 00:11:32.562" endtime="20200522 00:11:32.562"></status>
</kw>
<kw name="Clear OSPF Neighbor All" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 00:11:32.562" level="INFO">[host 192.168.1.55 session-id 11554] Requesting 'ExecuteRpc'</msg>
<status status="PASS" starttime="20200522 00:11:32.562" endtime="20200522 00:11:32.796"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<msg timestamp="20200522 00:12:32.796" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20200522 00:11:32.796" endtime="20200522 00:12:32.796"></status>
</kw>
<kw name="Get OSPF Neighbor State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 00:12:32.797" level="INFO">[host 192.168.1.55 session-id 11554] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:12:33.016" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 00:12:32.797" endtime="20200522 00:12:33.016"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 00:12:33.016" endtime="20200522 00:12:33.017"></status>
</kw>
<tags>
<tag>OSPF</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 00:11:31.929" endtime="20200522 00:12:33.017" critical="yes"></status>
</test>
<test id="s1-t4" name="T01.4 Check BGP comes back after flap">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 00:12:33.400" level="INFO">[host 192.168.1.55 session-id 11566] initialized: session-id=11566 | server_capabilities=&lt;dict_keyiterator object at 0x1108f1f40&gt;</msg>
<msg timestamp="20200522 00:12:33.400" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x1108f88e0&gt;</msg>
<status status="PASS" starttime="20200522 00:12:33.018" endtime="20200522 00:12:33.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 00:12:33.401" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x1108f88e0&gt;</msg>
<status status="PASS" starttime="20200522 00:12:33.400" endtime="20200522 00:12:33.401"></status>
</kw>
<status status="PASS" starttime="20200522 00:12:33.018" endtime="20200522 00:12:33.401"></status>
</kw>
<kw name="Get BGP Peer State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 00:12:33.401" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:12:33.637" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:12:33.780" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:12:33.883" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:12:33.988" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:12:34.093" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 00:12:33.401" endtime="20200522 00:12:34.093"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 00:12:34.093" endtime="20200522 00:12:34.093"></status>
</kw>
<kw name="Clear BGP Neighbor All" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 00:12:34.094" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<status status="PASS" starttime="20200522 00:12:34.093" endtime="20200522 00:12:34.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<msg timestamp="20200522 00:13:34.416" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20200522 00:12:34.416" endtime="20200522 00:13:34.417"></status>
</kw>
<kw name="Get BGP Peer State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 00:13:34.418" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:13:34.508" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:13:34.620" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:13:34.725" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:13:34.830" level="INFO">[host 192.168.1.55 session-id 11566] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 00:13:34.934" level="INFO">${peer_state} = None</msg>
<status status="PASS" starttime="20200522 00:13:34.417" endtime="20200522 00:13:34.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<msg timestamp="20200522 00:13:34.934" level="FAIL">UP != None</msg>
<status status="FAIL" starttime="20200522 00:13:34.934" endtime="20200522 00:13:34.934"></status>
</kw>
<tags>
<tag>BGP</tag>
<tag>ROUTER</tag>
</tags>
<status status="FAIL" starttime="20200522 00:12:33.017" endtime="20200522 00:13:34.935" critical="yes">UP != None</status>
</test>
<doc>Router Test Cases</doc>
<status status="FAIL" starttime="20200522 00:11:22.492" endtime="20200522 00:13:34.935"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="1">Critical Tests</stat>
<stat pass="3" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1">BGP</stat>
<stat pass="1" fail="0">OSPF</stat>
<stat pass="2" fail="0">PING</stat>
<stat pass="3" fail="1">ROUTER</stat>
</tag>
<suite>
<stat pass="3" fail="1" id="s1" name="01 Router">01 Router</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
