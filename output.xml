<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.1 on darwin)" generated="20200521 23:38:31.438" rpa="false">
<suite id="s1" name="01 Router" source="/Users/warrick.mitchell/Documents/Projects/robotframework-napalm/tests/01_router.robot">
<test id="s1-t1" name="T01.1 Ping VL-PE1 Router Management Interface">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200521 23:38:32.475" level="INFO">[host 192.168.1.55 session-id 11166] initialized: session-id=11166 | server_capabilities=&lt;dict_keyiterator object at 0x10e639720&gt;</msg>
<msg timestamp="20200521 23:38:32.475" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e631ee0&gt;</msg>
<status status="PASS" starttime="20200521 23:38:32.014" endtime="20200521 23:38:32.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200521 23:38:32.476" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e631ee0&gt;</msg>
<status status="PASS" starttime="20200521 23:38:32.475" endtime="20200521 23:38:32.476"></status>
</kw>
<status status="PASS" starttime="20200521 23:38:32.014" endtime="20200521 23:38:32.476"></status>
</kw>
<kw name="Ping Neighbor" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>192.168.1.55</arg>
</arguments>
<assign>
<var>${peer_ping_state}</var>
</assign>
<msg timestamp="20200521 23:38:32.476" level="INFO">[host 192.168.1.55 session-id 11166] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:38:36.622" level="INFO">${peer_ping_state} = Successful</msg>
<status status="PASS" starttime="20200521 23:38:32.476" endtime="20200521 23:38:36.622"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Successful</arg>
<arg>${peer_ping_state}</arg>
</arguments>
<status status="PASS" starttime="20200521 23:38:36.622" endtime="20200521 23:38:36.623"></status>
</kw>
<doc>Check ping is working to PE management interface</doc>
<tags>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200521 23:38:32.013" endtime="20200521 23:38:36.623" critical="yes"></status>
</test>
<test id="s1-t2" name="T01.2 Ping VL-PE2 Loopback Interface">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200521 23:38:36.970" level="INFO">[host 192.168.1.55 session-id 11172] initialized: session-id=11172 | server_capabilities=&lt;dict_keyiterator object at 0x10e6dba40&gt;</msg>
<msg timestamp="20200521 23:38:36.970" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e6cfeb0&gt;</msg>
<status status="PASS" starttime="20200521 23:38:36.624" endtime="20200521 23:38:36.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200521 23:38:36.970" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e6cfeb0&gt;</msg>
<status status="PASS" starttime="20200521 23:38:36.970" endtime="20200521 23:38:36.970"></status>
</kw>
<status status="PASS" starttime="20200521 23:38:36.624" endtime="20200521 23:38:36.970"></status>
</kw>
<kw name="Ping Neighbor" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_ping_state}</var>
</assign>
<msg timestamp="20200521 23:38:36.971" level="INFO">[host 192.168.1.55 session-id 11172] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:38:41.102" level="INFO">${peer_ping_state} = Successful</msg>
<status status="PASS" starttime="20200521 23:38:36.971" endtime="20200521 23:38:41.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Successful</arg>
<arg>${peer_ping_state}</arg>
</arguments>
<status status="PASS" starttime="20200521 23:38:41.102" endtime="20200521 23:38:41.102"></status>
</kw>
<doc>Check ping is working to the Neighbor PE router</doc>
<tags>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200521 23:38:36.623" endtime="20200521 23:38:41.103" critical="yes"></status>
</test>
<test id="s1-t3" name="T01.3 Check OSPF comes back after flap">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200521 23:38:41.386" level="INFO">[host 192.168.1.55 session-id 11178] initialized: session-id=11178 | server_capabilities=&lt;dict_keyiterator object at 0x10e6ed4a0&gt;</msg>
<msg timestamp="20200521 23:38:41.387" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e6ec3d0&gt;</msg>
<status status="PASS" starttime="20200521 23:38:41.104" endtime="20200521 23:38:41.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200521 23:38:41.387" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e6ec3d0&gt;</msg>
<status status="PASS" starttime="20200521 23:38:41.387" endtime="20200521 23:38:41.387"></status>
</kw>
<status status="PASS" starttime="20200521 23:38:41.103" endtime="20200521 23:38:41.387"></status>
</kw>
<kw name="Get OSPF Neighbor State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200521 23:38:41.388" level="INFO">[host 192.168.1.55 session-id 11178] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:38:41.652" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200521 23:38:41.387" endtime="20200521 23:38:41.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200521 23:38:41.652" endtime="20200521 23:38:41.653"></status>
</kw>
<kw name="Clear OSPF Neighbor All" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200521 23:38:41.653" level="INFO">[host 192.168.1.55 session-id 11178] Requesting 'ExecuteRpc'</msg>
<status status="PASS" starttime="20200521 23:38:41.653" endtime="20200521 23:38:41.908"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<msg timestamp="20200521 23:39:41.909" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20200521 23:38:41.909" endtime="20200521 23:39:41.909"></status>
</kw>
<kw name="Get OSPF Neighbor State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200521 23:39:41.910" level="INFO">[host 192.168.1.55 session-id 11178] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:39:42.111" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200521 23:39:41.909" endtime="20200521 23:39:42.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200521 23:39:42.111" endtime="20200521 23:39:42.111"></status>
</kw>
<doc>Check if OSPF is up, clear OSPF sessions, check again</doc>
<tags>
<tag>OSPF ROUTER</tag>
</tags>
<status status="PASS" starttime="20200521 23:38:41.103" endtime="20200521 23:39:42.111" critical="yes"></status>
</test>
<test id="s1-t4" name="T01.4 Check BGP comes back after flap">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200521 23:39:42.468" level="INFO">[host 192.168.1.55 session-id 11190] initialized: session-id=11190 | server_capabilities=&lt;dict_keyiterator object at 0x10e6f1ea0&gt;</msg>
<msg timestamp="20200521 23:39:42.469" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e6f7a30&gt;</msg>
<status status="PASS" starttime="20200521 23:39:42.112" endtime="20200521 23:39:42.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200521 23:39:42.469" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10e6f7a30&gt;</msg>
<status status="PASS" starttime="20200521 23:39:42.469" endtime="20200521 23:39:42.469"></status>
</kw>
<status status="PASS" starttime="20200521 23:39:42.112" endtime="20200521 23:39:42.469"></status>
</kw>
<kw name="Get BGP Peer State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200521 23:39:42.470" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:39:42.636" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:39:42.777" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:39:42.879" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:39:42.987" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:39:43.093" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200521 23:39:42.470" endtime="20200521 23:39:43.093"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200521 23:39:43.093" endtime="20200521 23:39:43.093"></status>
</kw>
<kw name="Clear BGP Neighbor All" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200521 23:39:43.094" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<status status="PASS" starttime="20200521 23:39:43.093" endtime="20200521 23:39:43.428"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<msg timestamp="20200521 23:40:43.429" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20200521 23:39:43.429" endtime="20200521 23:40:43.429"></status>
</kw>
<kw name="Get BGP Peer State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200521 23:40:43.430" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:40:43.471" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:40:43.605" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:40:43.709" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:40:43.815" level="INFO">[host 192.168.1.55 session-id 11190] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200521 23:40:43.922" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200521 23:40:43.429" endtime="20200521 23:40:43.922"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200521 23:40:43.923" endtime="20200521 23:40:43.923"></status>
</kw>
<doc>Check if BGP peer is UP, clear BGP sessions, check again</doc>
<tags>
<tag>BGP ROUTER</tag>
</tags>
<status status="PASS" starttime="20200521 23:39:42.112" endtime="20200521 23:40:43.923" critical="yes"></status>
</test>
<doc>Router Test Cases</doc>
<status status="PASS" starttime="20200521 23:38:31.440" endtime="20200521 23:40:43.924"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">BGP ROUTER</stat>
<stat pass="1" fail="0">OSPF ROUTER</stat>
<stat pass="2" fail="0">ROUTER</stat>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="01 Router">01 Router</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
