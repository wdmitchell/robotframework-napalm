<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.1 on darwin)" generated="20200522 07:43:29.669" rpa="false">
<suite id="s1" name="01 Router" source="/Users/warrick.mitchell/Documents/Projects/robotframework-napalm/tests/01_router.robot">
<test id="s1-t1" name="T01.1 Ping VL-PE1 Router Management Interface">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 07:43:30.583" level="INFO">[host 192.168.1.55 session-id 14606] initialized: session-id=14606 | server_capabilities=&lt;dict_keyiterator object at 0x109ea84f0&gt;</msg>
<msg timestamp="20200522 07:43:30.584" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a025e50&gt;</msg>
<status status="PASS" starttime="20200522 07:43:30.286" endtime="20200522 07:43:30.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:43:30.584" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a025e50&gt;</msg>
<status status="PASS" starttime="20200522 07:43:30.584" endtime="20200522 07:43:30.584"></status>
</kw>
<status status="PASS" starttime="20200522 07:43:30.286" endtime="20200522 07:43:30.584"></status>
</kw>
<kw name="Ping Neighbor" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>192.168.1.55</arg>
</arguments>
<assign>
<var>${peer_ping_state}</var>
</assign>
<msg timestamp="20200522 07:43:30.585" level="INFO">[host 192.168.1.55 session-id 14606] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:43:34.726" level="INFO">${peer_ping_state} = Successful</msg>
<status status="PASS" starttime="20200522 07:43:30.584" endtime="20200522 07:43:34.726"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Successful</arg>
<arg>${peer_ping_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:43:34.727" endtime="20200522 07:43:34.727"></status>
</kw>
<tags>
<tag>PING</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 07:43:30.285" endtime="20200522 07:43:34.727" critical="yes"></status>
</test>
<test id="s1-t2" name="T01.2 Ping VL-PE2 Loopback Interface">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 07:43:35.106" level="INFO">[host 192.168.1.55 session-id 14612] initialized: session-id=14612 | server_capabilities=&lt;dict_keyiterator object at 0x10a0de400&gt;</msg>
<msg timestamp="20200522 07:43:35.106" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a0dc310&gt;</msg>
<status status="PASS" starttime="20200522 07:43:34.728" endtime="20200522 07:43:35.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:43:35.107" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a0dc310&gt;</msg>
<status status="PASS" starttime="20200522 07:43:35.107" endtime="20200522 07:43:35.107"></status>
</kw>
<status status="PASS" starttime="20200522 07:43:34.728" endtime="20200522 07:43:35.107"></status>
</kw>
<kw name="Ping Neighbor" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_ping_state}</var>
</assign>
<msg timestamp="20200522 07:43:35.108" level="INFO">[host 192.168.1.55 session-id 14612] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:43:39.240" level="INFO">${peer_ping_state} = Successful</msg>
<status status="PASS" starttime="20200522 07:43:35.107" endtime="20200522 07:43:39.240"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Successful</arg>
<arg>${peer_ping_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:43:39.240" endtime="20200522 07:43:39.241"></status>
</kw>
<tags>
<tag>PING</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 07:43:34.728" endtime="20200522 07:43:39.241" critical="yes"></status>
</test>
<test id="s1-t3" name="T01.3 Check OSPF comes back after flap">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 07:43:39.618" level="INFO">[host 192.168.1.55 session-id 14618] initialized: session-id=14618 | server_capabilities=&lt;dict_keyiterator object at 0x10a0e1e00&gt;</msg>
<msg timestamp="20200522 07:43:39.618" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a0e47c0&gt;</msg>
<status status="PASS" starttime="20200522 07:43:39.242" endtime="20200522 07:43:39.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:43:39.619" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a0e47c0&gt;</msg>
<status status="PASS" starttime="20200522 07:43:39.618" endtime="20200522 07:43:39.619"></status>
</kw>
<status status="PASS" starttime="20200522 07:43:39.242" endtime="20200522 07:43:39.619"></status>
</kw>
<kw name="Get OSPF Neighbor State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 07:43:39.619" level="INFO">[host 192.168.1.55 session-id 14618] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:43:39.897" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 07:43:39.619" endtime="20200522 07:43:39.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:43:39.897" endtime="20200522 07:43:39.897"></status>
</kw>
<kw name="Clear OSPF Neighbor All" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:43:39.898" level="INFO">[host 192.168.1.55 session-id 14618] Requesting 'ExecuteRpc'</msg>
<status status="PASS" starttime="20200522 07:43:39.897" endtime="20200522 07:43:40.154"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<msg timestamp="20200522 07:44:40.155" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20200522 07:43:40.154" endtime="20200522 07:44:40.155"></status>
</kw>
<kw name="Get OSPF Neighbor State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 07:44:40.156" level="INFO">[host 192.168.1.55 session-id 14618] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:44:40.332" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 07:44:40.155" endtime="20200522 07:44:40.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:44:40.332" endtime="20200522 07:44:40.333"></status>
</kw>
<tags>
<tag>OSPF</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 07:43:39.241" endtime="20200522 07:44:40.333" critical="yes"></status>
</test>
<test id="s1-t4" name="T01.4 Check BGP comes back after flap">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 07:44:40.612" level="INFO">[host 192.168.1.55 session-id 14649] initialized: session-id=14649 | server_capabilities=&lt;dict_keyiterator object at 0x10a0ef860&gt;</msg>
<msg timestamp="20200522 07:44:40.613" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a0f0df0&gt;</msg>
<status status="PASS" starttime="20200522 07:44:40.334" endtime="20200522 07:44:40.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:44:40.613" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a0f0df0&gt;</msg>
<status status="PASS" starttime="20200522 07:44:40.613" endtime="20200522 07:44:40.613"></status>
</kw>
<status status="PASS" starttime="20200522 07:44:40.334" endtime="20200522 07:44:40.613"></status>
</kw>
<kw name="Get BGP Peer State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 07:44:40.614" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:44:40.847" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:44:40.984" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:44:41.089" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:44:41.197" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:44:41.300" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 07:44:40.614" endtime="20200522 07:44:41.300"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:44:41.300" endtime="20200522 07:44:41.301"></status>
</kw>
<kw name="Clear BGP Neighbor All" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:44:41.301" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<status status="PASS" starttime="20200522 07:44:41.301" endtime="20200522 07:44:41.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>80s</arg>
</arguments>
<msg timestamp="20200522 07:46:01.610" level="INFO">Slept 1 minute 20 seconds</msg>
<status status="PASS" starttime="20200522 07:44:41.610" endtime="20200522 07:46:01.611"></status>
</kw>
<kw name="Get BGP Peer State" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
<arg>10.0.0.2</arg>
</arguments>
<assign>
<var>${peer_state}</var>
</assign>
<msg timestamp="20200522 07:46:01.611" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:01.664" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:01.788" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:01.890" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:01.997" level="INFO">[host 192.168.1.55 session-id 14649] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:02.104" level="INFO">${peer_state} = UP</msg>
<status status="PASS" starttime="20200522 07:46:01.611" endtime="20200522 07:46:02.104"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>UP</arg>
<arg>${peer_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:46:02.104" endtime="20200522 07:46:02.105"></status>
</kw>
<tags>
<tag>BGP</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 07:44:40.333" endtime="20200522 07:46:02.105" critical="yes"></status>
</test>
<test id="s1-t5" name="T01.5 Check for Chassis Alarms">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 07:46:02.522" level="INFO">[host 192.168.1.55 session-id 14672] initialized: session-id=14672 | server_capabilities=&lt;dict_keyiterator object at 0x10a0c3900&gt;</msg>
<msg timestamp="20200522 07:46:02.523" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a025460&gt;</msg>
<status status="PASS" starttime="20200522 07:46:02.106" endtime="20200522 07:46:02.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:46:02.523" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a025460&gt;</msg>
<status status="PASS" starttime="20200522 07:46:02.523" endtime="20200522 07:46:02.523"></status>
</kw>
<status status="PASS" starttime="20200522 07:46:02.105" endtime="20200522 07:46:02.523"></status>
</kw>
<kw name="Get Chassis Alarms" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<assign>
<var>${chassis_alarm_state}</var>
</assign>
<msg timestamp="20200522 07:46:02.524" level="INFO">[host 192.168.1.55 session-id 14672] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:02.799" level="INFO">${chassis_alarm_state} = No Alarms</msg>
<status status="PASS" starttime="20200522 07:46:02.524" endtime="20200522 07:46:02.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>No Alarms</arg>
<arg>${chassis_alarm_state}</arg>
</arguments>
<status status="PASS" starttime="20200522 07:46:02.800" endtime="20200522 07:46:02.800"></status>
</kw>
<tags>
<tag>ALARMS</tag>
<tag>ROUTER</tag>
</tags>
<status status="PASS" starttime="20200522 07:46:02.105" endtime="20200522 07:46:02.800" critical="yes"></status>
</test>
<test id="s1-t6" name="T01.6 Check for System Alarms">
<kw name="Connect device" type="setup">
<kw name="Napalm Connect" library="RouterNapalm">
<arguments>
<arg>${PE1}</arg>
<arg>${LOGIN}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${napalm-connection-PE1}</var>
</assign>
<msg timestamp="20200522 07:46:03.159" level="INFO">[host 192.168.1.55 session-id 14678] initialized: session-id=14678 | server_capabilities=&lt;dict_keyiterator object at 0x10a11a130&gt;</msg>
<msg timestamp="20200522 07:46:03.159" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a114bb0&gt;</msg>
<status status="PASS" starttime="20200522 07:46:02.801" endtime="20200522 07:46:03.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<msg timestamp="20200522 07:46:03.159" level="INFO">${napalm-connection-PE1} = &lt;napalm.junos.junos.JunOSDriver object at 0x10a114bb0&gt;</msg>
<status status="PASS" starttime="20200522 07:46:03.159" endtime="20200522 07:46:03.159"></status>
</kw>
<status status="PASS" starttime="20200522 07:46:02.801" endtime="20200522 07:46:03.159"></status>
</kw>
<kw name="Get System Alarms" library="RouterNapalm">
<arguments>
<arg>${napalm-connection-PE1}</arg>
</arguments>
<assign>
<var>${system_alarm_state}</var>
</assign>
<msg timestamp="20200522 07:46:03.160" level="INFO">[host 192.168.1.55 session-id 14678] Requesting 'ExecuteRpc'</msg>
<msg timestamp="20200522 07:46:03.397" level="INFO">${system_alarm_state} = {'show system alarms': '\n1 alarms currently active\nAlarm time               Class  Description\n2020-05-21 01:37:13 UTC  Minor  Rescue configuration is not set\n'}</msg>
<status status="PASS" starttime="20200522 07:46:03.160" endtime="20200522 07:46:03.397"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>No Alarms</arg>
<arg>${system_alarm_state}</arg>
</arguments>
<msg timestamp="20200522 07:46:03.397" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'dict'&gt;</msg>
<msg timestamp="20200522 07:46:03.397" level="FAIL">No Alarms != {'show system alarms': '\n1 alarms currently active\nAlarm time               Class  Description\n2020-05-21 01:37:13 UTC  Minor  Rescue configuration is not set\n'}</msg>
<status status="FAIL" starttime="20200522 07:46:03.397" endtime="20200522 07:46:03.397"></status>
</kw>
<tags>
<tag>ALARMS</tag>
<tag>ROUTER</tag>
</tags>
<status status="FAIL" starttime="20200522 07:46:02.800" endtime="20200522 07:46:03.397" critical="yes">No Alarms != {'show system alarms': '\n1 alarms currently active\nAlarm time               Class  Description\n2020-05-21 01:37:13 UTC  Minor  Rescue configuration is not set\n'}</status>
</test>
<doc>Router Test Cases</doc>
<status status="FAIL" starttime="20200522 07:43:29.670" endtime="20200522 07:46:03.398"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="1">Critical Tests</stat>
<stat pass="5" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1">ALARMS</stat>
<stat pass="1" fail="0">BGP</stat>
<stat pass="1" fail="0">OSPF</stat>
<stat pass="2" fail="0">PING</stat>
<stat pass="5" fail="1">ROUTER</stat>
</tag>
<suite>
<stat pass="5" fail="1" id="s1" name="01 Router">01 Router</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
